"use strict";(self.webpackChunkecdx=self.webpackChunkecdx||[]).push([[933],{851:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),d=["components"],i={sidebar_position:6},c="Add Node to DAG",l={unversionedId:"tutorial-react/node-creation",id:"tutorial-react/node-creation",title:"Add Node to DAG",description:"In terms of editable DAG, Nice-DAG supports adding nodes to existing DAG diagram. The example extends Drag And Drop (Edge).",source:"@site/docs/tutorial-react/node-creation.md",sourceDirName:"tutorial-react",slug:"/tutorial-react/node-creation",permalink:"/nice-dag/docs/tutorial-react/node-creation",editUrl:"https://github.com/eBay/nice-dag/tree/nice-dag-docusaurus/docs/tutorial-react/node-creation.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Drag And Drop (Edge)",permalink:"/nice-dag/docs/tutorial-react/edge-drag-drop"},next:{title:"Remove a Node",permalink:"/nice-dag/docs/tutorial-react/node-deletion"}},s={},p=[{value:"Step 1: Add a DOM node handling node creation",id:"step-1-add-a-dom-node-handling-node-creation",level:2},{value:"Step 2: Add an event listener to create node",id:"step-2-add-an-event-listener-to-create-node",level:2}],u={toc:p};function g(e){var n=e.components,t=(0,a.Z)(e,d);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"add-node-to-dag"},"Add Node to DAG"),(0,o.kt)("p",null,"In terms of editable DAG, Nice-DAG supports adding nodes to existing DAG diagram. The example extends ",(0,o.kt)("a",{parentName:"p",href:"./edge-drag-drop"},"Drag And Drop (Edge)"),"."),(0,o.kt)("h2",{id:"step-1-add-a-dom-node-handling-node-creation"},"Step 1: Add a DOM node handling node creation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'export function MyFirstDag() {\n  const { niceDagEl, render, niceDag } = useNiceDag({\n    initNodes: NodeData,\n    editable: true,\n  });\n\n  ...\n\n  return (\n    <div>\n      <div className="control-bar">\n        <button>Add</button>  \x3c!--Here is to add a button--\x3e\n      </div>\n      <div className="my-first-dag" ref={niceDagEl} />\n      {render()}\n    </div>\n  );\n}\n')),(0,o.kt)("h2",{id:"step-2-add-an-event-listener-to-create-node"},"Step 2: Add an event listener to create node"),(0,o.kt)("p",null,"The node creation is realized by a ",(0,o.kt)("a",{parentName:"p",href:"/nice-dag/docs/api-ref/nice-dag"},"NiceDag")," API. In order to optimize React component updating, you can call the API within a ",(0,o.kt)("inlineCode",{parentName:"p"},"useCallback")," clause."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'import React, {useCallback} from \'react\';\n\nlet nodeCtnRef = 0; //Node count reference which is used to make node id unique.\n\nexport function MyFirstDag() {\n  const { niceDagEl, render, niceDag } = useNiceDag({\n    initNodes: NodeData,\n    editable: true,\n  });\n\n  ...\n\n  const createNodeFn = useCallback(() => {\n    niceDag.addNode({\n        id: `new-node-${nodeCtnRef}`,\n    }, {\n        x: 40, //offsetX related to the top container of DAG view\n        y: 40  //offsetY related to the top container of DAG view\n    });\n    nodeCtnRef = nodeCtnRef + 1;\n  }, [niceDag]);\n\n  return (\n    <div>\n      <div className="control-bar">\n        <button onClick={createNodeFn}>Add</button>\n      </div>\n      <div className="my-first-dag" ref={niceDagEl} />\n      {render()}\n    </div>\n  );\n}\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Notes:"),"\nTo call the ",(0,o.kt)("a",{parentName:"p",href:"/nice-dag/docs/api-ref/nice-dag#addnode"},"addNode")," method, you need to give an unique node id."))}g.isMDXComponent=!0},3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>g});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function d(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):d(d({},n),e)),t},s=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=l(t),g=a,f=u["".concat(c,".").concat(g)]||u[g]||p[g]||o;return t?r.createElement(f,d(d({ref:n},s),{},{components:t})):r.createElement(f,d({ref:n},s))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,d=new Array(o);d[0]=u;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,d[1]=i;for(var l=2;l<o;l++)d[l]=t[l];return r.createElement.apply(null,d)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);