"use strict";(self.webpackChunkecdx=self.webpackChunkecdx||[]).push([[571],{9473:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),d=["components"],i={sidebar_position:6},c="Drag And Drop (Edge)",p={unversionedId:"tutorial-react/edge-drag-drop",id:"tutorial-react/edge-drag-drop",title:"Drag And Drop (Edge)",description:"Besides the node dragging and dropping support, Nice-DAG also support edge dragging and dropping. To simplify the illustration, the example extends Drag And Drop (Node).",source:"@site/docs/tutorial-react/edge-drag-drop.md",sourceDirName:"tutorial-react",slug:"/tutorial-react/edge-drag-drop",permalink:"/nice-dag/docs/tutorial-react/edge-drag-drop",editUrl:"https://github.com/eBay/nice-dag/tree/nice-dag-docusaurus/docs/tutorial-react/edge-drag-drop.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Drag And Drop (Node)",permalink:"/nice-dag/docs/tutorial-react/node-drag-drop"},next:{title:"Add Node to DAG",permalink:"/nice-dag/docs/tutorial-react/node-creation"}},s={},l=[{value:"Step 1: Add Connector component to Node",id:"step-1-add-connector-component-to-node",level:2},{value:"Step 2: Add dragging event listener to the connector",id:"step-2-add-dragging-event-listener-to-the-connector",level:2}],g={toc:l};function u(e){var n=e.components,t=(0,o.Z)(e,d);return(0,a.kt)("wrapper",(0,r.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"drag-and-drop-edge"},"Drag And Drop (Edge)"),(0,a.kt)("p",null,"Besides the node dragging and dropping support, Nice-DAG also support edge dragging and dropping. To simplify the illustration, the example extends ",(0,a.kt)("a",{parentName:"p",href:"./node-drag-drop"},"Drag And Drop (Node)"),"."),(0,a.kt)("h2",{id:"step-1-add-connector-component-to-node"},"Step 1: Add Connector component to Node"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Connector")," component is a separated component that can handle dragging events of edge connection. The component should be added to the node component."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'function Connector({ node, niceDag }) {\n  return <div className={`my-first-dag-connector`}/>\n}\n\nfunction SampleNode({ node, niceDag }) {\n  return (\n    <div className="editable-sample-node">\n      <Connector node={node} niceDag={niceDag}/>\n    </div>\n  );\n}\n')),(0,a.kt)("p",null,"Here is to give the node position by css."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css"},".my-first-dag-connector {\n    width: 16px;\n    height: 16px;\n    border: 1px solid black;\n    border-radius: 50%;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    background: white;\n    cursor: pointer;\n    right: -8px;\n}\n")),(0,a.kt)("h2",{id:"step-2-add-dragging-event-listener-to-the-connector"},"Step 2: Add dragging event listener to the connector"),(0,a.kt)("p",null,"Nice-DAG gives an edge dragging event listener in default. To get the listener, you need to use ",(0,a.kt)("a",{parentName:"p",href:"/nice-dag/docs/api-ref/useNiceDagNode"},"useNiceDagNode")," hook. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"function Connector({ niceDag, node }) {\n  const { startEdgeDragging } = useNiceDagNode({ node, niceDag });\n  return <div className={`my-first-dag-connector`} onMouseDown={startEdgeDragging}/>;\n}\n")))}u.isMDXComponent=!0},3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>u});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function d(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):d(d({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),g=p(t),u=o,m=g["".concat(c,".").concat(u)]||g[u]||l[u]||a;return t?r.createElement(m,d(d({ref:n},s),{},{components:t})):r.createElement(m,d({ref:n},s))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,d=new Array(a);d[0]=g;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,d[1]=i;for(var p=2;p<a;p++)d[p]=t[p];return r.createElement.apply(null,d)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"}}]);